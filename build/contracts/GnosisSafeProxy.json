{
  "contractName": "GnosisSafeProxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_masterCopy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_masterCopy\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"author\":\"Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>\",\"methods\":{\"constructor\":{\"details\":\"Constructor function sets address of master copy contract.\",\"params\":{\"_masterCopy\":\"Master copy address.\"}}},\"title\":\"GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/filipemsoccol/Documents/doiim/otoco-smart-contracts/contracts/utils/GnosisSafeProxy.sol\":\"GnosisSafeProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/filipemsoccol/Documents/doiim/otoco-smart-contracts/contracts/utils/GnosisSafeProxy.sol\":{\"keccak256\":\"0x356c0a6b0c6f3483bd61dc83e0cdfbf59456249597943cc55651efcc5095c7e0\",\"urls\":[\"bzz-raw://8e7dde45d427853ef3cd12f3c10293199c69ed7c0d2b4f155dc1e5a33e3213c1\",\"dweb:/ipfs/QmPRmrd5fe4mswjJ2qyVHeVDcfFrBPARYo3ZtqLzfmtkAB\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516101e83803806101e88339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806101c46024913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060ab806101196000396000f3fe608060405273ffffffffffffffffffffffffffffffffffffffff600054167fa619486e0000000000000000000000000000000000000000000000000000000060003514156050578060005260206000f35b3660008037600080366000845af43d6000803e60008114156070573d6000fd5b3d6000f3fea264697066735822122056e8ae02bde6776b1debb4cdca0d5f13ebc4d11705a6711c07d9ed69e0d5f37264736f6c63430006000033496e76616c6964206d617374657220636f707920616464726573732070726f7669646564",
  "deployedBytecode": "0x608060405273ffffffffffffffffffffffffffffffffffffffff600054167fa619486e0000000000000000000000000000000000000000000000000000000060003514156050578060005260206000f35b3660008037600080366000845af43d6000803e60008114156070573d6000fd5b3d6000f3fea264697066735822122056e8ae02bde6776b1debb4cdca0d5f13ebc4d11705a6711c07d9ed69e0d5f37264736f6c63430006000033",
  "sourceMap": "288:1507:10:-:0;;;730:177;8:9:-1;5:2;;;30:1;27;20:12;5:2;730:177:10;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;730:177:10;;;;;;;;;;;;;;;;823:1;800:25;;:11;:25;;;;792:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;889:11;876:10;;:24;;;;;;;;;;;;;;;;;;730:177;288:1507;;;;;;",
  "deployedSourceMap": "288:1507:10:-:0;;;1178:42;1174:1;1168:8;1164:57;1356:66;1352:1;1339:15;1336:87;1333:2;;;1452;1449:1;1442:13;1482:4;1479:1;1472:15;1333:2;1533:14;1530:1;1527;1514:34;1622:1;1619;1603:14;1600:1;1596:2;1589:5;1576:48;1658:16;1655:1;1652;1637:38;1703:1;1694:7;1691:14;1688:2;;;1718:16;1715:1;1708:27;1688:2;1760:16;1757:1;1750:27",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity 0.6.0;\n\n/// @title GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n/// @author Stefan George - <stefan@gnosis.io>\n/// @author Richard Meissner - <richard@gnosis.io>\ncontract GnosisSafeProxy {\n\n    // masterCopy always needs to be first declared variable, to ensure that it is at the same location in the contracts to which calls are delegated.\n    // To reduce deployment costs this variable is internal and needs to be retrieved via `getStorageAt`\n    address internal masterCopy;\n\n    /// @dev Constructor function sets address of master copy contract.\n    /// @param _masterCopy Master copy address.\n    constructor(address _masterCopy)\n        public\n    {\n        require(_masterCopy != address(0), \"Invalid master copy address provided\");\n        masterCopy = _masterCopy;\n    }\n\n    /// @dev Fallback function forwards all transactions and returns all received return data.\n    fallback ()\n        external\n        payable\n    {\n        // solium-disable-next-line security/no-inline-assembly\n        assembly {\n            let mc := and(sload(0), 0xffffffffffffffffffffffffffffffffffffffff)\n            // 0xa619486e == keccak(\"masterCopy()\"). The value is right padded to 32-bytes with 0s\n            if eq(calldataload(0), 0xa619486e00000000000000000000000000000000000000000000000000000000) {\n                mstore(0, mc)\n                return(0, 0x20)\n            }\n            calldatacopy(0, 0, calldatasize())\n            let success := delegatecall(gas(), mc, 0, calldatasize(), 0, 0)\n            returndatacopy(0, 0, returndatasize())\n            if eq(success, 0) { revert(0, returndatasize()) }\n            return(0, returndatasize())\n        }\n    }\n}",
  "sourcePath": "/Users/filipemsoccol/Documents/doiim/otoco-smart-contracts/contracts/utils/GnosisSafeProxy.sol",
  "ast": {
    "absolutePath": "/Users/filipemsoccol/Documents/doiim/otoco-smart-contracts/contracts/utils/GnosisSafeProxy.sol",
    "exportedSymbols": {
      "GnosisSafeProxy": [
        2383
      ]
    },
    "id": 2384,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2355,
        "literals": [
          "solidity",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:22:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n @author Stefan George - <stefan@gnosis.io>\n @author Richard Meissner - <richard@gnosis.io>",
        "fullyImplemented": true,
        "id": 2383,
        "linearizedBaseContracts": [
          2383
        ],
        "name": "GnosisSafeProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2357,
            "name": "masterCopy",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2383,
            "src": "576:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2356,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "576:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2376,
              "nodeType": "Block",
              "src": "782:125:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2363,
                          "name": "_masterCopy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2359,
                          "src": "800:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "823:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "815:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2364,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "815:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "815:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "800:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206d617374657220636f707920616464726573732070726f7669646564",
                        "id": 2369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "827:38:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87",
                          "typeString": "literal_string \"Invalid master copy address provided\""
                        },
                        "value": "Invalid master copy address provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87",
                          "typeString": "literal_string \"Invalid master copy address provided\""
                        }
                      ],
                      "id": 2362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3038,
                        3039
                      ],
                      "referencedDeclaration": 3039,
                      "src": "792:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "792:74:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2371,
                  "nodeType": "ExpressionStatement",
                  "src": "792:74:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2372,
                      "name": "masterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2357,
                      "src": "876:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2373,
                      "name": "_masterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2359,
                      "src": "889:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "876:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2375,
                  "nodeType": "ExpressionStatement",
                  "src": "876:24:10"
                }
              ]
            },
            "documentation": "@dev Constructor function sets address of master copy contract.\n @param _masterCopy Master copy address.",
            "id": 2377,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2359,
                  "name": "_masterCopy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2377,
                  "src": "742:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "741:21:10"
            },
            "returnParameters": {
              "id": 2361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "782:0:10"
            },
            "scope": 2383,
            "src": "730:177:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2381,
              "nodeType": "Block",
              "src": "1057:736:10",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1140:647:10",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1154:67:10",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1174:1:10",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "sload",
                                "nodeType": "YulIdentifier",
                                "src": "1168:5:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1168:8:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1178:42:10",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1164:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1164:57:10"
                        },
                        "variables": [
                          {
                            "name": "mc",
                            "nodeType": "YulTypedName",
                            "src": "1158:2:10",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1424:77:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1449:1:10",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "mc",
                                    "nodeType": "YulIdentifier",
                                    "src": "1452:2:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1442:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1442:13:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1442:13:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1479:1:10",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1482:4:10",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "1472:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1472:15:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1472:15:10"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1352:1:10",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1339:12:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1339:15:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1356:66:10",
                              "type": "",
                              "value": "0xa619486e00000000000000000000000000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "1336:2:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1336:87:10"
                        },
                        "nodeType": "YulIf",
                        "src": "1333:2:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1527:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1530:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1533:12:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1533:14:10"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1514:12:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1514:34:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1514:34:10"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1561:63:10",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "1589:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1589:5:10"
                            },
                            {
                              "name": "mc",
                              "nodeType": "YulIdentifier",
                              "src": "1596:2:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1600:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1603:12:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1603:14:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1619:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1622:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "1576:12:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1576:48:10"
                        },
                        "variables": [
                          {
                            "name": "success",
                            "nodeType": "YulTypedName",
                            "src": "1565:7:10",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1652:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1655:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1658:14:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1658:16:10"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1637:14:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1637:38:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1637:38:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1706:31:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1715:1:10",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1718:14:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1718:16:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1708:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1708:27:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1708:27:10"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "success",
                              "nodeType": "YulIdentifier",
                              "src": "1694:7:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1703:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "1691:2:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1691:14:10"
                        },
                        "nodeType": "YulIf",
                        "src": "1688:2:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1757:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1760:14:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1760:16:10"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "1750:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1750:27:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1750:27:10"
                      }
                    ]
                  },
                  "externalReferences": [],
                  "id": 2380,
                  "nodeType": "InlineAssembly",
                  "src": "1131:656:10"
                }
              ]
            },
            "documentation": "@dev Fallback function forwards all transactions and returns all received return data.",
            "id": 2382,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1017:2:10"
            },
            "returnParameters": {
              "id": 2379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:0:10"
            },
            "scope": 2383,
            "src": "1008:785:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2384,
        "src": "288:1507:10"
      }
    ],
    "src": "39:1756:10"
  },
  "legacyAST": {
    "absolutePath": "/Users/filipemsoccol/Documents/doiim/otoco-smart-contracts/contracts/utils/GnosisSafeProxy.sol",
    "exportedSymbols": {
      "GnosisSafeProxy": [
        2383
      ]
    },
    "id": 2384,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2355,
        "literals": [
          "solidity",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:22:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n @author Stefan George - <stefan@gnosis.io>\n @author Richard Meissner - <richard@gnosis.io>",
        "fullyImplemented": true,
        "id": 2383,
        "linearizedBaseContracts": [
          2383
        ],
        "name": "GnosisSafeProxy",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2357,
            "name": "masterCopy",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2383,
            "src": "576:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2356,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "576:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2376,
              "nodeType": "Block",
              "src": "782:125:10",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2363,
                          "name": "_masterCopy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2359,
                          "src": "800:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 2366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "823:1:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "815:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2364,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "815:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 2367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "815:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "800:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c6964206d617374657220636f707920616464726573732070726f7669646564",
                        "id": 2369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "827:38:10",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87",
                          "typeString": "literal_string \"Invalid master copy address provided\""
                        },
                        "value": "Invalid master copy address provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_108d84599042957b954e89d43b52f80be89321dfc114a37800028eba58dafc87",
                          "typeString": "literal_string \"Invalid master copy address provided\""
                        }
                      ],
                      "id": 2362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3038,
                        3039
                      ],
                      "referencedDeclaration": 3039,
                      "src": "792:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "792:74:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2371,
                  "nodeType": "ExpressionStatement",
                  "src": "792:74:10"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2372,
                      "name": "masterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2357,
                      "src": "876:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2373,
                      "name": "_masterCopy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2359,
                      "src": "889:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "876:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2375,
                  "nodeType": "ExpressionStatement",
                  "src": "876:24:10"
                }
              ]
            },
            "documentation": "@dev Constructor function sets address of master copy contract.\n @param _masterCopy Master copy address.",
            "id": 2377,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2359,
                  "name": "_masterCopy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2377,
                  "src": "742:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "742:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "741:21:10"
            },
            "returnParameters": {
              "id": 2361,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "782:0:10"
            },
            "scope": 2383,
            "src": "730:177:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2381,
              "nodeType": "Block",
              "src": "1057:736:10",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1140:647:10",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1154:67:10",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1174:1:10",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "sload",
                                "nodeType": "YulIdentifier",
                                "src": "1168:5:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1168:8:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1178:42:10",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1164:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1164:57:10"
                        },
                        "variables": [
                          {
                            "name": "mc",
                            "nodeType": "YulTypedName",
                            "src": "1158:2:10",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1424:77:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1449:1:10",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "mc",
                                    "nodeType": "YulIdentifier",
                                    "src": "1452:2:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1442:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1442:13:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1442:13:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1479:1:10",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1482:4:10",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "1472:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1472:15:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1472:15:10"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1352:1:10",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1339:12:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1339:15:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1356:66:10",
                              "type": "",
                              "value": "0xa619486e00000000000000000000000000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "1336:2:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1336:87:10"
                        },
                        "nodeType": "YulIf",
                        "src": "1333:2:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1527:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1530:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1533:12:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1533:14:10"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1514:12:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1514:34:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1514:34:10"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1561:63:10",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "1589:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1589:5:10"
                            },
                            {
                              "name": "mc",
                              "nodeType": "YulIdentifier",
                              "src": "1596:2:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1600:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1603:12:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1603:14:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1619:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1622:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "1576:12:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1576:48:10"
                        },
                        "variables": [
                          {
                            "name": "success",
                            "nodeType": "YulTypedName",
                            "src": "1565:7:10",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1652:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1655:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1658:14:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1658:16:10"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1637:14:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1637:38:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1637:38:10"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1706:31:10",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1715:1:10",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1718:14:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1718:16:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1708:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1708:27:10"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1708:27:10"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "success",
                              "nodeType": "YulIdentifier",
                              "src": "1694:7:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1703:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "1691:2:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1691:14:10"
                        },
                        "nodeType": "YulIf",
                        "src": "1688:2:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1757:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1760:14:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1760:16:10"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "1750:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1750:27:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1750:27:10"
                      }
                    ]
                  },
                  "externalReferences": [],
                  "id": 2380,
                  "nodeType": "InlineAssembly",
                  "src": "1131:656:10"
                }
              ]
            },
            "documentation": "@dev Fallback function forwards all transactions and returns all received return data.",
            "id": 2382,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2378,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1017:2:10"
            },
            "returnParameters": {
              "id": 2379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1057:0:10"
            },
            "scope": 2383,
            "src": "1008:785:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2384,
        "src": "288:1507:10"
      }
    ],
    "src": "39:1756:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2020-11-28T13:59:08.001Z",
  "devdoc": {
    "author": "Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>",
    "methods": {
      "constructor": {
        "details": "Constructor function sets address of master copy contract.",
        "params": {
          "_masterCopy": "Master copy address."
        }
      }
    },
    "title": "GnosisSafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract."
  },
  "userdoc": {
    "methods": {}
  }
}